#!/bin/bash
#!/bin/bash

mirapt() {
daoroot $1
mkdir -p $ML/mirror-$JC/$FWQ

if [ ! -z "$FWQ" -a ! -z "$DH" ];then
mount -o bind $ML/$JC $ML/mirror-$JC/$FWQ
JX="
deb http://$FWQ/ $DH main restricted universe multiverse
deb http://$FWQ/ $DH-security main restricted universe multiverse
deb http://$FWQ/ $DH-updates main restricted universe multiverse
deb http://$FWQ/ $DH-proposed main restricted universe multiverse
deb http://$FWQ/ $DH-backports main restricted universe multiverse

deb-src http://$FWQ/ $DH main restricted universe multiverse
deb-src http://$FWQ/ $DH-security main restricted universe multiverse
deb-src http://$FWQ/ $DH-updates main restricted universe multiverse
deb-src http://$FWQ/ $DH-proposed main restricted universe multiverse
deb-src http://$FWQ/ $DH-backports main restricted universe multiverse
"
fi
xzdeb
for i in i386 amd64 ;do
tee <<file>/etc/apt/mirror.list
############# config ##################

set base_path $ML/mirror-$JC
set defaultarch $i
set mirror_path  $ML/mirror-$JC
set nthreads     25
set _tilde 0

$JX
#
clean http://$FWQ
file
if [ ! -f /usr/bin/apt-mirror ];then
apt install apt-mirror;fi
apt-mirror
done
umount $ML/mirror-$JC/$FWQ
mkdir -p $ML/.deb/$JC
chown -R okapps:okapps $ML
chmod -R 755 $ML
jlapt


}

xzdeb() {
dq=$(pwd)
mkdir -p $ML/mirror-$JC/dl
cd $ML/mirror-$JC/dl
debmc=""
echo >$ML/$JC/.look/0123.look
for i in $XZAPP ;do
deblb=$(curl $i|sed -n '/\.deb/p'|\
sed -e 's/deb.*/deb/g' |\
sed -e 's/.*href="//g' )
for d in $deblb 0123 ;do
b=$(echo "$d"|sed -e 's/_[0-9].*_//g')
if [ ! -z "$debmc" -a "$debmc" != "$b" -a ! -f "$c" -a ! -f "$ML/$JC/.look/$c.look" ] ;then
wget -c -N "$i/$c" &
sleep 10;fi
c=$d
debmc=$b
done
done
cd "$dq"
}




yapt() {
mkdir -p $1/$3-$2 ;cd $1
mkdir -p deb-$2
tee <<FXTXET>$3-$2/Release
in: $MC
Label: $MC
Suite: $JC
Version:$BB
Codename: $3-$2/
Description:　$MC $BB
MD5Sum:
FXTXET
case $3 in
os|apt)
if [ -d dists ];then
echo "">$3-$2/Packages
echo "">$3-$2/Sources
for p in dists/$DH/*/*-$2/Packages dists/$DH*/*/*-$2/Packages;do
if [ -f $p ];then
cat $p >> $3-$2/Packages
fi;done
for p in dists/$DH/*/source/Sources dists/$DH*/*/source/Sources;do
if [ -f $p ];then
cat $p >> $3-$2/Sources
fi;done
else
if [ ! -f $3-$2/Packages ];then
dpkg-scanpackages deb-$2 /dev/null >$3-$2/Packages 
dpkg-scansources . /dev/null >$3-$2/Sources
fi;fi

cat $3-$2/Packages|gzip -c9>$3-$2/Packages.gz
cat $3-$2/Sources|gzip -c9>$3-$2/Sources.gz
apt-ftparchive release $3-$2 >>$3-$2/Release
rm $3-$2/InRelease $3-$2/Release.gpg -rf
;;
*)
if [ ! -f .okapps.look ]; then
echo >.okapps.look
echo "正在生成$2软件包列表，请耐心等待。。。。。。"
dpkg-scanpackages deb-$2 /dev/null >$3-$2/Packages 
cat $3-$2/Packages|gzip -c9>$3-$2/Packages.gz
apt-ftparchive release $3-$2 >>$3-$2/Release
rm $3-$2/InRelease $3-$2/Release.gpg -rf
mkdir -p ../tmp/deb-$2
mkdir -p .look
for Y in $(ls deb-$2/);do
[ ! -f .look/$Y.look ]&& echo >.look/$Y.look
mv deb-$2/$Y ../tmp/deb-$2/ ;done
sed -n '/Filename/p' $3-$2/Packages|while read a b;do
mv -f ../tmp/$b deb-$2/
done
rm .okapps.look
fi ;;
esac

# gpg -abs --default-key $gpgkey -o $3-$2/Release.gpg $3-$2/Release
# gpg --clearsign --default-key $gpgkey -o $3-$2/InRelease $3-$2/Release
gpg -abs  -o $3-$2/Release.gpg $3-$2/Release
gpg --clearsign -o $3-$2/InRelease $3-$2/Release
yuan="deb http://$BJFWQ/$1 $3-$2/
# deb-src http://$BJFWQ/$1 $3-$2/
$yuan"

echo 列表生成完毕！
cd ..
}

jlapt() {
if [ ! -e /usr/bin/dpkg-scanpackages ];then
apt-get -y install dpkg-dev ;fi

if [ ! -f .$JC-linux.DB ];then
gpg -a --export -a >$JC/$JC-linux.pub && \
gpg -a --export-secret-keys -a >.$JC-linux.sub
gpg --export-ownertrust >.$JC-linux.DB
elif [ ! -f $HOME/.okapps-key.sub ];then
cp .$JC-linux.sub $HOME/.okapps-key.sub
gpg --import .$JC-linux.sub ;fi

yuan=""
for d in $(find $ML/mirror-$JC/ -name "*.deb") ;do
[ ! -f $ML/$JC/.look/$(basename $d).look -a -d "$ML/mirror-$JC" -a "$LX" == "app" ] && cp -rf $d $ML/.deb/$JC/
done
scdeb $ML/.deb/$JC/*

case $LX in
os)
if [ -d $JC/apt-amd64 ];then
yapt $JC amd64 apt
yapt $JC i386 apt
else
yapt $JC mips os
yapt $JC amd64 os
yapt $JC i386 os
yapt $JC amd64 update ;fi
list=/etc/apt/sources.list;;
app)
yapt $JC amd64 app
yapt $JC i386 app
yapt $JC arm64 app
yapt $JC loongson mips
list=/etc/apt/sources.list.d/$JC.list;;
esac
tee <<rtf>$JC/$JC-apt.list
#$ZZ desktop v$BB

$yuan

rtf


case $0 in
./*|/bin/*)
mkdir -p .deb/$JC
tee <<shell>$JC-up-deb.sh
#!/bin/bash
if [ ! -f ~/.ssh/\$(basename \$0 ) ];then
ssh-copy-id $SSHFWQ -p 22
cp \$0 ~/.ssh/\$(basename \$0 ) ;fi
for a in "\$@" ;do
scp -P 22 \$a $SSHFWQ:$ML/.deb/$JC/\$(basename \$a);;
done
ssh $SSHFWQ bash okapps build &
shell
;;
esac
tee<<ttttt>$JC/install-$JC.sh
#!/bin/bash
cd /tmp
wget http://$BJFWQ/$JC/$JC-apt.list
wget http://$BJFWQ/$JC/$JC-linux.pub
sudo mv -f $JC-apt.list $list
sudo apt-key add $JC-linux.pub
rm $JC-linux.pub
apt update
ttttt


}

scdeb() {
cd "$DQML"
for a in $@ ;do
if [ -f "$a" ];  then
arch=$(dpkg-deb --info "$a"|grep "Architecture")
case "$arch" in
*amd64*|*all*) cpu=amd64;;
*i386*) cpu=i386;;
*arm64*) cpu=arm64;;
*mips*) cpu=loongson;;
esac
if [ ! -z "$cpu" ];then
mkdir -p $ML/$JC/deb-$cpu
mv "$a" $ML/$JC/deb-$cpu/
fi ;fi ;done
cd $ML
}

startinst() {
if [ -d /etc/nginx/vhost ];then
httpcnf=/etc/nginx/vhost/apt8010.conf
else
httpcnf=/etc/okapps-nginx.conf;fi
tee <<nginxcf>$httpcnf
server
    {
        listen 80;
        server_name $BJFWQ;
        root $ML;

        location / {
            autoindex on;   
            autoindex_exact_size off;   
            autoindex_localtime on;   
        }

        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
        {
            expires      30d;
        }

        location ~ .*\.(js|css)?$
        {
            expires      12h;
        }

        access_log off;
    }
nginxcf
tee <<service>/etc/init.d/okapps
#!/bin/bash
### BEGIN INIT INFO
# Provides:          okapps
# Required-Start:    \$remote_fs \$syslog
# Required-Stop:     \$remote_fs \$syslog
# Default-Start:     2 3 4 5
# Default-Stop:      1
# Short-Description: OKApp
# Description:       Auto Start PPTP VPN By sjchenkan
### END INIT INFO
export PATH=/bin:/sbin:$PATH
case "\$1" in
start) /bin/okapps auto 2>&1 >tmp/vpnook.log & ;;
stop) echo not stop ;;
esac
service

chmod +x /etc/init.d/okapps
if [ -x /sbin/chkconfig ];then
chkconfig okapps on
elif [ -f /usr/sbin/update-rc.d ];then
update-rc.d okapps start 80 2 3 4 5 . stop 80 1 .
update-rc.d okapps enable
elif type -p systemctl ;then
systemctl enable okapps ;fi
useradd okapps -m -s /bin/nologin-ok
cp "$DQML/$0" /bin/okapps
chmod +x /bin/okapps
chmod -R +w /home/okapps
chown -R okapps:okapps /home/okapps
mkdir -p $ML/.deb/$JC
chown -R okapps:okapps $ML &
chmod -R 755 $ML &
apt install -y python3-pip
pip3 install pyftpdlib
if [ ! -f /home/.okappscnf ];then
tee<<PASCNF>/home/.okappscnf
$$apps
$$apps
PASCNF
fi
passwd okapps</home/.okappscnf
}

zidong() {
zdtb=$(date +%d)
export HOME=/home/okapps
chmod -R 777 $ML
okftp
case $zdtb$TB in
*5y) mirapt & ;;
esac
while [ k == k ];do
sudo -u okapps $0 build 2>&1 >/tmp/okapps.log &
sleep 21600
done
}

okftp() {
if [ -f /home/.okftp.cnf ];then
. /home/.okftp.cnf
else
echo FTP user amd password:
read yonghu mima
[ -z "$mima" ] && okftp
duankou=8501
tee <<cnf>/home/.okftp.cnf
yonghu=$yonghu
mima=$mima
duankou=8501
cnf
fi


tee <<pyftp>/tmp/pyftp.py
import os
from pyftpdlib.authorizers import DummyAuthorizer
from pyftpdlib.handlers import FTPHandler
from pyftpdlib.servers import FTPServer

def main():
    authorizer = DummyAuthorizer()
    authorizer.add_user('$yonghu', '$mima', '$ML/.deb', perm='elradfmwM')
    authorizer.add_anonymous(os.getcwd())

    # Instantiate FTP handler class
    handler = FTPHandler
    handler.authorizer = authorizer
    address = ('', $duankou)
    server = FTPServer(address, handler)

    # set a limit for connections
    server.max_cons = 256
    server.max_cons_per_ip = 5
    # start ftp server
    server.serve_forever()

if __name__ == '__main__':
    main()
pyftp
sudo -u okapps python3 /tmp/pyftp.py &

}

upfwq() {
cd $ML
if [ -f ./.up.look ]; then
exit ; fi
echo >./.up.look
if [ ! -f ~/.ssh/$(basename $0 ) ];then
ssh-copy-id ck@103.235.222.153 -p 22
cp $0 ~/.ssh/$(basename  $0 ) ;fi
ssh ck@103.235.222.153 rm $ML2/deb-*/*
scp -r $ML/$JC/* ck@103.235.222.153:$ML2/
rm ./.up.look
}

cnf() {
for cnf in $ML/.okapps* ;do
if [ -f $cnf ];then
. $cnf
$1 $2
fi
done
}

daoroot() {
if [ $(id -u) != 0 ];then
cd "$DQML"
if [ ! -f ~/.ssh/mm$(basename "$0").key ];then
echo Sudo Password?
read mm
ka=$(echo $mm|base64 -i)
kb=$(echo $(md5sum /etc/passwd)|base64 -i|sed -n '1p')
kd=$(echo $(id;date +%m)|base64 -i|sed -n '1p')
echo $kd$ka$kb|tr -d '[ |=|\-]'>~/.ssh/mm$(basename "$0").key ;fi
pass="$(cat ~/.ssh/mm$(basename "$0").key)" 
kb=$(echo $(md5sum /etc/passwd)|base64 -i|sed -n '1p')
kd=$(echo $(id;date +%m)|base64 -i|sed -n '1p')
pass=$(echo "$pass"|sed -e "s/$kd//g")
echo "$pass=="|sed -e "s/$kb//g"|base64 -d|sudo -S bash "$0" "$@" 
sleep 2
if [ -f ~/.ssh/mm$(basename "$0").key.look ]; then
rm -rf ~/.ssh/mm$(basename "$0").key.look ;else
rm -rf ~/.ssh/mm$(basename "$0").key*;fi
exit
elif [ -f ~/.ssh/mm$(basename "$0").key ]; then
cp ~/.ssh/mm$(basename "$0").key ~/.ssh/mm$(basename "$0").key.look
fi
}

if [ -f /etc/okapps ];then
. /etc/okapps
else
daoroot
tee <<okcnf>/etc/okapps
MC=OKLinux
JC=lroapps
LX=app
ZZ=lroapps
BB=2.0
FWQ=
TB=n
DH=
BJFWQ=okapps.oukan.online
SSHFWQ="okapps@oukan.online"
ML2=/home/wwwroot/$BJFWQ
ML=/home/wwwroot/lroapps
JX="

"
XZAPP="

"
okcnf
. /etc/okapps
mkdir -p $ML
[ ! -f $ML/.okapps ] && cp /etc/okapps $ML/.okapps
fi
DQML=$(pwd)
[ -f ~/.gpgkeycnf ]&& . ~/.gpgkeycnf
[ -d $ML ] && cd $ML


case $1 in
setup)daoroot $1;startinst;;
*.deb) cnf scdeb "$@" ;;
build) cnf jlapt $2 & ;;
down) cnf xzdeb $2 & ;;
tb) cnf mirapt $2 & ;;
auto) cnf zidong & ;;
ftp) okftp "$@";;
esac


