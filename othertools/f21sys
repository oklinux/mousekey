#!/bin/bash


if [ -f /home/lsf/bin/cd ];then
if [ ! -d /home/lsf/sys/dev ];then
mount -o bind /proc /home/lsf/proc
mount -o bind /srv /home/lsf/srv
mount -o bind /sys /home/lsf/sys
mount -o bind /run /home/lsf/run
mount -o bind /dev /home/lsf/dev
fi
sed -e '1,/bindata\//d' /bin/f21sys>/home/lsf/boot.sh
chmod 777 /home/lsf/boot.sh
chroot /home/lsf /boot.sh
if [ -d /home/lsf/dev/shm ];then
umount /home/lsf/proc
umount /home/lsf/sys
umount /home/lsf/srv
umount /home/lsf/run
umount /home/lsf/dev
fi
exit
fi

#/bindata//
#!/bin/bash

dns="8.8.8.8
8.8.4.4
223.5.5.5
223.6.6.6
114.114.114.114
180.78.78.78"
echo >/etc/resolv.conf
for d in $dns ;do
echo "nameserver $d" >>/etc/resolv.conf
done

cd
case $(python3 --version) in
*3.8.*) ;;
*) wget -O py.tar.xz https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tar.xz
xz -d py.tar.xz
tar xvf py.tar
cd  Python-3.8.0
./configure --prefix=/usr
make && yum remove python3
make install
cd ;;
esac

pydir=/usr/bin

#3export ALL_PROXY=socks5://127.0.0.1:10808
#export http_proxy=127.0.0.1:10809
#export https_proxy=127.0.0.1:10809

if [ ! -f depot_tools/.up-python3 ];then
yum install git nodejs npm re2c -y
git config --global http.postBuffer 232333111
git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
if [ -d depot_tools ];then
cd depot_tools
tee <<str>.up-python3
[ ! -f \$BOOTSTRAP_PYTHON_BIN ]&&mkdir -p \$(dirname "\$BOOTSTRAP_PYTHON_BIN") &&ln -sf $pydir/python3 \$BOOTSTRAP_PYTHON_BIN
str
sed -i  "#$pydir#d" bootstrap_python3
sed -i  '/BOOTSTRAP_PYTHON_BIN=/r .up-python3' bootstrap_python3
mkdir -p python-bin
ln -sf $pydir/python3 python-bin/
fi;fi
if [ ! -d "$HOME/ninja" ]; then
git clone https://github.com/ninja-build/ninja.git -b v1.8.2
cd ninja && ./configure.py --bootstrap ;fi

export PATH="$HOME/ninja:$HOME/depot_tools:$PATH"
#for pyhome in $(find /usr/local/ -name python3.*) ;do
#[ -d "$pyhome" ]&&  export PYTHONHOME="$pyhome:$PYTHONHOME"
#done
mkdir -p ~/nwjs-build

dosync() {
#~/depot_tools/gclient config --name=src https://chromium.googlesource.com/chromium/src
gclient config --name=src https://github.com/nwjs/chromium.src.git@origin/nw52
mkdir -p ~/nwjs-build/src/content/nw
cd ~/nwjs-build/src/content/nw
~/depot_tools/gclient config --name=src https://github.com/nwjs/nw.js
mkdir -p ~/nwjs-build/src/third_party/node-nw
cd ~/nwjs-build/src/third_party/node-nw
~/depot_tools/gclient config --name=src https://github.com/nwjs/node
mkdir -p ~/nwjs-build/src/v8
cd ~/nwjs-build/src/v8
~/depot_tools/gclient config --name=src https://github.com/nwjs/v8
cd ~/nwjs-build/
gclient sync --with_branch_heads
./src/build/install-build-deps.sh
}

buildnwjs() {
cd ~/nwjs-build/src
export GN_CONFIGS="{
is_debug=false
is_clang=false
is_component_ffmpeg=true
use_sysroot=false
use_gold=false
proprietary_codecs=true
enable_widevine=false
fatal_linker_warnings=false
link_pulseaudio=true
treat_warnings_as_errors=false
nwjs_sdk=false
}"
 gn gen out/nw --args="${GN_CONFIG[*]}"

 ninja -C out/nw nwjs
 export GYP_DEFINES="target_arch=mips64el debug=false clang=false sysroot=false host_arch=mips64el"
 GYP_CHROMIUM_NO_ACTION=0 ./build/gyp_chromium -I third_party/node-nw/common.gypi -D building_nw=1 third_party/node-nw/node.gyp
 ninja -C out/Release node
 ninja -C out/nw copy_node
}


cd ~/nwjs-build
echo "是否同步(y/n)？";read yn
case "$yn" in
s)bash;exit ;;
y*|Y*)dosync 
buildnwjs;;
*)buildnwjs ;;
esac

exit





mkdir -p $HOME/nwjs
 cd $HOME/nwj

"custom_deps" : {
  "src/third_party/WebKit/LayoutTests": None,
   "src/chrome_frame/tools/test/reference_build/chrome": None,
  "src/chrome_frame/tools/test/reference_build/chrome_win": None,
  "src/chrome/tools/test/reference_build/chrome": None,
  "src/chrome/tools/test/reference_build/chrome_linux": None,
  "src/chrome/tools/test/reference_build/chrome_mac": None,
  "src/chrome/tools/test/reference_build/chrome_win": None,
 }
is_debug=false
 is_component_ffmpeg=true
target_cpu="x64"
cd src
GYP_CHROMIUM_NO_ACTION=0
./build/gyp_chromium -I \ third_party/node-nw/common.gypi -D building_nw=1 -D clang=1 third_party/node-nw/node.gyp
./build/gyp_chromium -D component=shared_library -I third_party/node-nw/common.gypi -D building_nw=1 -D clang=1 third_party/node-nw/node.gyp
cd src
 ninja -C out/nw nwjs
cd src ninja -C out/Release node
cd src ninja -C out/nw copy_node
‘nwjs_sdk=false 
enable_nacl=true
